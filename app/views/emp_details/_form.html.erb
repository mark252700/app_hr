<style>
#float,#next{
float:right
}

</style>

<%= simple_form_for(@emp_detail, html: { class: 'form-horizontal' }) do |f| %>
  <%= f.error_notification %>
  <%= f.error_notification message: f.object.errors[:base].to_sentence if f.object.errors[:base].present? %>

  <div class="row justify-content-center">
    <div class="col-sm-4">
      <div class="form-group ">
        
        <%= f.input :firstname, label: 'First Name', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :middlename, label: 'Middle Name', input_html: { class: 'form-control has-value next-input' } %>
       
      </div>
    </div>

     <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :lastname, label: 'Last Name', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

   
  </div>
  <div class="row justify-content-center">
   
    <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :emp_id, label: 'Employee No.', input_html: { class: 'form-control has-value next-input' } %>
      
      </div>
    </div>

     <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :pos_title, label: 'Position', input_html: { class: 'form-control has-value next-input' }%>
      
      </div>
    </div>

   
  </div>

  <br>

  <div class="row justify-content-center">
  <div class="col-sm-4">
    <div class="form-group">
      <%= f.label :division, class: 'control-label' %>
      <%= f.select :division, [['Select Division', ''], ['Life Operations', 'Life Operations'], ['Nonlife Operations', 'Nonlife Operations'], ['Admin and Finance', 'Admin and Finance'],['Sales and Marketing', 'Sales and Marketing'], ['Support', 'Support'], ['CDO Branch', 'CDO,Branch'], ['Ilo-ilo Branch', 'Ilo-ilo Branch'], ['Davao Branch', 'Davao Branch']] , {}, { class: "form-control #{'is-invalid' if f.object.errors[:division].any?}" } %>
      <% if f.object.errors[:division].any? %>
        <div class="invalid-feedback">
          <%= f.object.errors.full_messages_for(:division).join(', ') %>
        </div>
      <% end %>
    </div>
  </div>

   <div class="col-sm-4">
      <div class="form-group">
       
        <%= f.input :department, label: 'Department', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>

  <div class="col-sm-4">
    <div class="form-group">
      <%= f.label :rank, class: 'control-label' %>
      <%= f.select :rank, [['Select a rank', ''], ['Senior Officer', 'Senior Officer'],['Manager', 'Manager'],  ['Supervisor', 'Supervisor'], ['Rank and File', 'Rank and File']], {}, { class: "form-control #{'is-invalid' if f.object.errors[:rank].any?}" } %>
      <% if f.object.errors[:rank].any? %>
        <div class="invalid-feedback">
          <%= f.object.errors.full_messages_for(:rank).join(', ') %>
        </div>
      <% end %>
    </div>
  </div>
</div>


<br>

  <div class="row justify-content-center">
    <div class="col-sm-4">
      <div class="form-group ">
       <br>
        <%= f.input :contact, label: 'Contact', input_html: { class: 'form-control has-value next-input', type: 'number', max: 99999999999 }%>
       
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
       <%= f.label :ser_year, label: 'Year in Service', class: 'control-label text-bold fw-bold' %>

        <%= f.input :ser_year, label: 'year', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
       <br>
        <%= f.input :ser_month, label: 'month', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>
  </div>

  <div class="row justify-content-center">
   

     <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :sup_name, label: 'Immidiate Superior', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
      
        <%= f.input :sup_title, label: 'Immidiate Superior Position', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>
  </div>

  <br/>
  <hr>
  <%# <p> education layer </p> %>
  <div class="card">
  <h5 class="card-header text-uppercase">Educational Attainment</h5>
  <div class="card-body">

  <div class="row justify-content-center">
    <div class="col-sm-4">
      <div class="form-group ">
        
        <%= f.input :educ_course, label: 'Course', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>

    </div>

    <div class="col-sm-4">
      <div class="form-group ">
         <%= f.label :educ_grad, 'Year of Graduation' %><br>
            <%= f.date_field :educ_grad, class: 'form-control has-value next-input', data: { controller: 'datepicker' }, max: Date.today.strftime('%Y-%m-%d') %>
           
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
        
        <%= f.input :educ_skill, label: 'Skills', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>
  </div>

  <div class="row justify-content-center">
    <div class="col-sm-4">
      <div class="form-group ">
      
         <%= f.input :educ_undergrad, label: 'if Undergraduate', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :educ_othskill, label: 'Other Skills', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>
  </div>
   </div>
    </div>

  <br>
  <hr>
  <%# <p> position details </p> %>
   <div class="card">
  <h5 class="card-header text-uppercase">Position Details (Current Position)</h5>
  <div class="card-body">

  <div class="row justify-content-center">
    <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :hr_perday, label: 'Hour Perday', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
        
        <%= f.input :hr_perweek, label: 'Hour Perweek', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
       
        <%= f.input :workday, label: 'Number of Workdays', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

    <div class="col -sm">
      <div class="form-group">
        
        <%= f.input :break, label: 'Break Time', input_html: { class: 'form-control has-value next-input' }%>
       
      </div>
    </div>

    <div class="col-sm">
      <div class="form-group">
       
        <%= f.input :launch, label: 'Lunch Time', input_html: { class: 'form-control has-value next-input' }%>
        
      </div>
    </div>

    <div class="col-sm">
      <div class="form-group ">
        <%= f.label :ot_weekday,label: 'Overtime Weekday' ,class: 'control-label' %>
        <div>
          <label class="radio-inline">
            <%= f.radio_button :ot_weekday, true %>
            Yes
          </label>
          <label class="radio-inline">
            <%= f.radio_button :ot_weekday, false %>
            No
          </label>
        </div>
        
      </div>
    </div>

    <div class="col-sm-4">
      <div class="form-group ">
        <%= f.label :ot_weekend,label: 'Overtime Weekend' , class: 'control-label' %>
        <div>
          <label class="radio-inline">
            <%= f.radio_button :ot_weekend, true %>
            Yes
          </label>
          <label class="radio-inline">
            <%= f.radio_button :ot_weekend, false %>
            No
          </label>
        </div>
       
      </div>
    </div>
  </div>
  </div>
  </div>
  <br>
  <hr>

  <div class="row justify-content-center">
    <div class="col">
      <%# <%= f.simple_fields_for :benefits do |b| %>
        <%# <%= render 'emp_details/benefit_fields', f: b %> 
      <%# <% end %> 
       
      <%# <%= link_to_add_association 'Add New Benefit', f, :benefits, class: 'btn btn-secondary' %> 
   <table class="table">
  <thead>
    <tr>
      <th class="">Benefits Recieved (Mandated and Initiated)</th>
      <th class="text-right col-2">
        <button type="button" class="btn btn-success" id="addrows">+</button>
      </th>
    </tr>
  </thead>
<tbody id="benefittable">
  <!-- Use fields_for to handle nested attributes -->
  <%= f.fields_for :benefits do |b| %>
    <tr>
      <td>
        <%= b.input :benefit, input_html: { class: 'form-control next-input' } %>
      </td>
      <td>
        <br>
        <button type="button" class="removebenefit btn btn-danger">Remove</button>
      </td>
    </tr>
  <% end %>
</tbody>
</table>



      
    </div>
  </div>

  <br>
<div class="form-actions">
  <div class="col">
  <%= f.button :submit, @button_label, name: 'save_button', class: action_name == 'new' ? 'btn btn-primary' : 'btn btn-success', id: 'next' %>
</div>

</div>
  <br>
<% end %>

<script>
  document.getElementById('addrows').addEventListener('click', function() {
    var tbody = document.getElementById('benefittable');
    var rowCount = tbody.getElementsByTagName('tr').length;

    var newRow = document.createElement('tr');
    newRow.innerHTML = `
      <td>
        <input type="text" name="emp_detail[benefits_attributes][${rowCount}][benefit]" class="form-control next-input">
      </td>
      <td>
        <button type="button" class="removebenefit btn btn-danger">Remove</button>
      </td>
    `;

    tbody.appendChild(newRow);
  });

  // Add event listener to handle remove button clicks
  document.getElementById('benefittable').addEventListener('click', function(e) {
    if (e.target && e.target.className.includes('removebenefit')) {
      var row = e.target.closest('tr');
      row.parentNode.removeChild(row);
    }
  });

 document.addEventListener('DOMContentLoaded', function() {
    var inputs = document.querySelectorAll('.next-input');

    for (var i = 0; i < inputs.length; i++) {
        inputs[i].addEventListener('keydown', function(event) {
            if (event.keyCode === 13) {  // Check for the Enter key
                event.preventDefault();
                var currentIndex = Array.from(inputs).indexOf(event.target);  // Get the current element's index
                var nextIndex = (currentIndex + 1) % inputs.length;  // Get the next element's index. Loop to the start if we're at the end.
                inputs[nextIndex].focus();  // Focus the next element
            }
        });
    }
});

</script>

